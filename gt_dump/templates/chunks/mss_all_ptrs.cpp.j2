struct all_ptrs {
    // resolve for storages
    template <uint_t Id, bool Temporary>
    GT_FUNCTION_DEVICE auto resolve(helpers::arg_identifier<Id, Temporary>, gt::array<int, 3> const& offsets) const noexcept
        -> decltype(std::declval<ptrs>().resolve_const(helpers::arg_identifier<Id, Temporary>(), gt::array<int, 3>())) {
        return ptrs_.resolve_const(helpers::arg_identifier<Id, Temporary>{}, offsets);
    }
    template <uint_t Id, bool Temporary>
    GT_FUNCTION_DEVICE auto resolve(helpers::arg_identifier<Id, Temporary>, gt::array<int, 3> const& offsets) noexcept
        -> decltype(std::declval<ptrs>().resolve(helpers::arg_identifier<Id, Temporary>(), gt::array<int, 3>())) {
        return ptrs_.resolve(helpers::arg_identifier<Id, Temporary>{}, offsets);
    }

    {%- if multistage|has_k_caches %}
      // resolve for k caches
      template <uint_t Id, bool Temporary>
      GT_FUNCTION_DEVICE auto resolve(helpers::arg_identifier<Id, Temporary>, gt::array<int, 3> const& offsets) const noexcept
          -> decltype(std::declval<k_caches>().resolve_const(helpers::arg_identifier<Id, Temporary>(), gt::array<int, 3>())) {
          return k_caches_.resolve_const(helpers::arg_identifier<Id, Temporary>{}, offsets);
      }
      template <uint_t Id, bool Temporary>
      GT_FUNCTION_DEVICE auto resolve(helpers::arg_identifier<Id, Temporary>, gt::array<int, 3> const& offsets) noexcept
          -> decltype(std::declval<k_caches>().resolve(helpers::arg_identifier<Id, Temporary>(), gt::array<int, 3>())) {
          return k_caches_.resolve(helpers::arg_identifier<Id, Temporary>{}, offsets);
      }
    {%- endif %}

    {%- if multistage|has_ij_caches %}
      // resolve for ij caches
      template <uint_t Id, bool Temporary>
      GT_FUNCTION_DEVICE auto resolve(helpers::arg_identifier<Id, Temporary>, gt::array<int, 3> const& offsets) const noexcept
          -> decltype(std::declval<ij_caches>().resolve_const(helpers::arg_identifier<Id, Temporary>(), gt::array<int, 3>(), 0, 0)) {
          return ij_caches_.resolve_const(helpers::arg_identifier<Id, Temporary>{}, offsets, iblock, jblock);
      }
      template <uint_t Id, bool Temporary>
      GT_FUNCTION_DEVICE auto resolve(helpers::arg_identifier<Id, Temporary>, gt::array<int, 3> const& offsets) noexcept
          -> decltype(std::declval<ij_caches>().resolve(helpers::arg_identifier<Id, Temporary>(), gt::array<int, 3>(), 0, 0)) {
          return ij_caches_.resolve(helpers::arg_identifier<Id, Temporary>{}, offsets, iblock, jblock);
      }
    {%- endif %}

    ptrs const& ptrs_;
    {%- if multistage|has_ij_caches %}
      ij_caches &ij_caches_;
    {%- endif %}
    {%- if multistage|has_k_caches %}
      k_caches &k_caches_;
    {%- endif %}

    int const iblock;
    int const jblock;
};
