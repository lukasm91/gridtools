{%- for multistage in context.multistages %}
  {%- if multistage.ij_caches|length > 0 %}
    struct multistage_{{ multistage.id }}_ij_caches {
        using mss_info = multistage_{{ multistage.id }}_info;
        static constexpr int ij_cache_i_size =
            helpers::block_i_size + -mss_info::max_stage_extent::iminus() + mss_info::max_stage_extent::iplus();
        static constexpr int ij_cache_j_size =
            helpers::block_j_size + -mss_info::max_stage_extent::jminus() + mss_info::max_stage_extent::jplus();

        {%- for ij_cache in multistage.ij_caches %}
          {{ ij_cache.type }} arg_{{ 'tmp_' if ij_cache.temporary }}{{ ij_cache.id }}_[ij_cache_j_size * ij_cache_i_size];
        {%- endfor %}

        {% for ij_cache in multistage.ij_caches %}
          GT_FUNCTION_DEVICE {{ ij_cache.type }}* arg_{{ 'tmp_' if ij_cache.temporary }}{{ ij_cache.id }}(int iblock, int jblock) {
              return &arg_{{ 'tmp_' if ij_cache.temporary }}{{ ij_cache.id }}_[
                  (jblock + -mss_info::max_stage_extent::jminus()) * ij_cache_i_size +
                  iblock + -mss_info::max_stage_extent::iminus()];
          }
        {%- endfor %}

        GT_FUNCTION int get_offset(int i, int j, int k) const noexcept {
            assert(k == 0);
            return i * i_stride_ + j * j_stride_;
        }
        static constexpr int i_stride_ = 1;
        static constexpr int j_stride_ = helpers::block_i_size + -mss_info::max_stage_extent::iminus() +
                                         mss_info::max_stage_extent::iplus();
    };
  {%- endif %}
{%- endfor %}
